@import 'normalise.scss';
@import 'variables.scss';

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
    // scroll-behavior: smooth;
}

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
* Remove the gap between audio, canvas, iframes,
* images, videos and the bottom of their containers:
* https://github.com/h5bp/html5-boilerplate/issues/440
*/

audio, canvas, iframe, img, svg, video {
    vertical-align: middle;
}

/*
* Remove default fieldset styles.
*/

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
* Allow only vertical resizing of textareas.
*/

textarea {
    resize: vertical;
}

/*
* Hide visually and from screen readers
*/

.hidden, [hidden] {
    display: none !important;
}

/*
* Hide only visually, but have it available for screen readers:
* https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
*
* 1. For long content, line feeds are not interpreted as spaces and small width
*    causes content to wrap 1 word per line:
*    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
*/

.sr-only {
    border: 0;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
    /* 1 */
}

/*
* Extends the .sr-only class to allow the element
* to be focusable when navigated to via the keyboard:
* https://www.drupal.org/node/897638
*/

.sr-only.focusable:active,
.sr-only.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    white-space: inherit;
    width: auto;
}

/*
* Hide visually and from screen readers, but maintain layout
*/

.invisible {
    visibility: hidden;
}

/*
* Clearfix: contain floats
*
* For modern browsers
* 1. The space content is one way to avoid an Opera bug when the
*    `contenteditable` attribute is included anywhere else in the document.
*    Otherwise it causes space to appear at the top and bottom of elements
*    that receive the `clearfix` class.
* 2. The use of `table` rather than `block` is only necessary if using
*    `:before` to contain the top-margins of child elements.
*/

.clearfix::before,
.clearfix::after {
content: " ";
    display: table;
}

.clearfix::after {
    clear: both;
}

* {
    padding: 0;
    margin: 0;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

body {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 100%;
}

a:focus, a:active, button:focus, button:active { 
    outline: thin dotted; 
}

img {
    max-width: 100%;
    height: auto;
}

ul {
    list-style: none;
    li {
        a {
        text-decoration: none;
        }
    }
}

h2 {
    text-align: center;
    padding-bottom: 15px;
    color: pink;

}

header {
    position: relative;
    .image-container {
        @media (min-width:1024px) {
            width: 100vw;
        }
        .image-bottom {
            width: 100%;
            @media (min-width:1024px) {
                display: none;                
            }
        }
        #bgvid {
            display: none;
            @media (min-width:1024px) {
                display: block;    
                width: 100%;            
            }
        }
        .image-top {
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%,-50%);
            width: 175px;
            @media (min-width:768px) {
                width: 300px;
            }
        }
    }
} 

nav {
    display: flex;
    position: fixed;
    width: 100%;
    top: 15px;
    right: 15px;
    z-index: 20;
}

/* burger menu */
.menu-container {
    border: 0; 
    margin-left: auto;
    position: absolute;
    top: -25px;
    right: -25px;
    z-index: 25;
    background-color: white;
    height: 60px;
    width: 60px;
    border-radius: 100%;
    .menu {
        width: 26px;
        height: 20px;
        margin: 0 auto;
        position: relative;
        transform: rotate(0deg);
        transition: .5s ease-in-out;
        cursor: pointer; 
        span {
            display: block;
            position: absolute;
            height: 2px;
            width: 100%;
            background: #000;
            opacity: 1;
            left: 0;
            transform: rotate(0deg);
            transition: .25s ease-in-out;
            &:nth-child(1) {
                top: 0;
            }
            &:nth-child(2), &:nth-child(3) {
                top: 9px;
            }
            &:nth-child(4) {
                top: 18px;
            }
        } 
        &.open {
            span {
                &:nth-child(1) {
                    top: 9px;
                    width: 0%;
                    left: 50%;
                }
                &:nth-child(2) {
                    transform: rotate(45deg);
                }
                &:nth-child(3) {
                    transform: rotate(-45deg);
                }
                &:nth-child(4) {
                    top: 18px;
                    width: 0%;
                    left: 50%;
                }
            }
        }
    }
}

.navigation {
    opacity: 0;
    transform: scale(0);
    transform-origin: top right;
    transition: all .5s ease-in-out;
    background: white;
    position: absolute;
    right: -35px;
    top: -35px;
    height: 250px;
    width: 250px;
    border-radius: 100%;
    font-size: 1.2rem;
    box-shadow: 0 0 5px 0 rgba(0,0,0,0.5);
    &.open {
        opacity: 1;
        transform: scale(1);
        transform-origin: top right;
    }
    li {
        line-height: 1.8;
        text-align: center;
        &:first-child {
            padding-top: 60px;
        }
    }
}

.inner {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

section {
    padding: 30px 0;
    &:first-of-type {
        padding-top: 60px;
    }
}

.flex-container {
    @media (min-width:768px) {
        display: flex;
    }
    .text-container {
        padding-bottom: 20px;
        @media (min-width:768px) {
            width: 50%;
            padding-right: 20px;
            padding-bottom: 0;
            &.reverse-order {
                order: 1;
                padding: 0 0 0 20px;
            }
        }
    }
    .image-container {
        @media (min-width:768px) {
            width: 50%;
        }
    }
}

